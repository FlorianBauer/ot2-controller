# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Ot2Controller_pb2 as Ot2Controller__pb2


class Ot2ControllerStub(object):
    """Feature: OT-2 Controller
    A SiLA 2 complaint controller for an OT-2 Liquid Handler robot.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadProtocol = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/UploadProtocol',
                request_serializer=Ot2Controller__pb2.UploadProtocol_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.UploadProtocol_Responses.FromString,
                )
        self.RemoveProtocol = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/RemoveProtocol',
                request_serializer=Ot2Controller__pb2.RemoveProtocol_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.RemoveProtocol_Responses.FromString,
                )
        self.RunProtocol = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/RunProtocol',
                request_serializer=Ot2Controller__pb2.RunProtocol_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.RunProtocol_Responses.FromString,
                )
        self.Get_Connection = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_Connection',
                request_serializer=Ot2Controller__pb2.Get_Connection_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.Get_Connection_Responses.FromString,
                )
        self.Get_AvailableProtocols = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_AvailableProtocols',
                request_serializer=Ot2Controller__pb2.Get_AvailableProtocols_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.Get_AvailableProtocols_Responses.FromString,
                )
        self.Get_AvailableJupyterNotebooks = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_AvailableJupyterNotebooks',
                request_serializer=Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Responses.FromString,
                )
        self.Get_CameraPicture = channel.unary_unary(
                '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_CameraPicture',
                request_serializer=Ot2Controller__pb2.Get_CameraPicture_Parameters.SerializeToString,
                response_deserializer=Ot2Controller__pb2.Get_CameraPicture_Responses.FromString,
                )


class Ot2ControllerServicer(object):
    """Feature: OT-2 Controller
    A SiLA 2 complaint controller for an OT-2 Liquid Handler robot.
    """

    def UploadProtocol(self, request, context):
        """Upload Protocol
        Uploads the given Protocol to the "/data/user_storage" dir on the OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveProtocol(self, request, context):
        """Remove Protocol
        Removes the given Protocol from the "/data/user_storage" dir on the OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunProtocol(self, request, context):
        """Run Protocol
        Runs the given Protocol on the OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_Connection(self, request, context):
        """Connection
        Connection details of the remote OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_AvailableProtocols(self, request, context):
        """Available Protocols
        List of the stored files available on the OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_AvailableJupyterNotebooks(self, request, context):
        """Available Jupyter Notebooks
        List of the stored Jupyter Notebooks available on the OT-2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_CameraPicture(self, request, context):
        """Camera Picture
        A current picture from the inside of the OT-2 made with the built-in camera.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Ot2ControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadProtocol': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadProtocol,
                    request_deserializer=Ot2Controller__pb2.UploadProtocol_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.UploadProtocol_Responses.SerializeToString,
            ),
            'RemoveProtocol': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveProtocol,
                    request_deserializer=Ot2Controller__pb2.RemoveProtocol_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.RemoveProtocol_Responses.SerializeToString,
            ),
            'RunProtocol': grpc.unary_unary_rpc_method_handler(
                    servicer.RunProtocol,
                    request_deserializer=Ot2Controller__pb2.RunProtocol_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.RunProtocol_Responses.SerializeToString,
            ),
            'Get_Connection': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_Connection,
                    request_deserializer=Ot2Controller__pb2.Get_Connection_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.Get_Connection_Responses.SerializeToString,
            ),
            'Get_AvailableProtocols': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_AvailableProtocols,
                    request_deserializer=Ot2Controller__pb2.Get_AvailableProtocols_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.Get_AvailableProtocols_Responses.SerializeToString,
            ),
            'Get_AvailableJupyterNotebooks': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_AvailableJupyterNotebooks,
                    request_deserializer=Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Responses.SerializeToString,
            ),
            'Get_CameraPicture': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_CameraPicture,
                    request_deserializer=Ot2Controller__pb2.Get_CameraPicture_Parameters.FromString,
                    response_serializer=Ot2Controller__pb2.Get_CameraPicture_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Ot2Controller(object):
    """Feature: OT-2 Controller
    A SiLA 2 complaint controller for an OT-2 Liquid Handler robot.
    """

    @staticmethod
    def UploadProtocol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/UploadProtocol',
            Ot2Controller__pb2.UploadProtocol_Parameters.SerializeToString,
            Ot2Controller__pb2.UploadProtocol_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveProtocol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/RemoveProtocol',
            Ot2Controller__pb2.RemoveProtocol_Parameters.SerializeToString,
            Ot2Controller__pb2.RemoveProtocol_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunProtocol(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/RunProtocol',
            Ot2Controller__pb2.RunProtocol_Parameters.SerializeToString,
            Ot2Controller__pb2.RunProtocol_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_Connection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_Connection',
            Ot2Controller__pb2.Get_Connection_Parameters.SerializeToString,
            Ot2Controller__pb2.Get_Connection_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_AvailableProtocols(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_AvailableProtocols',
            Ot2Controller__pb2.Get_AvailableProtocols_Parameters.SerializeToString,
            Ot2Controller__pb2.Get_AvailableProtocols_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_AvailableJupyterNotebooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_AvailableJupyterNotebooks',
            Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Parameters.SerializeToString,
            Ot2Controller__pb2.Get_AvailableJupyterNotebooks_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_CameraPicture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.fau.dispensing.ot2controller.v1.Ot2Controller/Get_CameraPicture',
            Ot2Controller__pb2.Get_CameraPicture_Parameters.SerializeToString,
            Ot2Controller__pb2.Get_CameraPicture_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
